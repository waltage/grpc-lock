// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: grpc_lock_service.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewMutexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket   string               `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Object   string               `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	Duration *durationpb.Duration `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *NewMutexRequest) Reset() {
	*x = NewMutexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_lock_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMutexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMutexRequest) ProtoMessage() {}

func (x *NewMutexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_lock_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMutexRequest.ProtoReflect.Descriptor instead.
func (*NewMutexRequest) Descriptor() ([]byte, []int) {
	return file_grpc_lock_service_proto_rawDescGZIP(), []int{0}
}

func (x *NewMutexRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *NewMutexRequest) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *NewMutexRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type ExtendMutexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mutex    *GCSMutex            `protobuf:"bytes,1,opt,name=mutex,proto3" json:"mutex,omitempty"`
	Duration *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *ExtendMutexRequest) Reset() {
	*x = ExtendMutexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_lock_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtendMutexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendMutexRequest) ProtoMessage() {}

func (x *ExtendMutexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_lock_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendMutexRequest.ProtoReflect.Descriptor instead.
func (*ExtendMutexRequest) Descriptor() ([]byte, []int) {
	return file_grpc_lock_service_proto_rawDescGZIP(), []int{1}
}

func (x *ExtendMutexRequest) GetMutex() *GCSMutex {
	if x != nil {
		return x.Mutex
	}
	return nil
}

func (x *ExtendMutexRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

var File_grpc_lock_service_proto protoreflect.FileDescriptor

var file_grpc_lock_service_proto_rawDesc = []byte{
	0x0a, 0x17, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0b, 0x6d, 0x75, 0x74, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78,
	0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x4d, 0x75, 0x74, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x76, 0x0a, 0x12, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x4d, 0x75, 0x74, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x43, 0x53, 0x4d, 0x75, 0x74,
	0x65, 0x78, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x78, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x32, 0x90, 0x02, 0x0a, 0x0f, 0x47, 0x72, 0x70, 0x63, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x4d, 0x75, 0x74, 0x65, 0x78,
	0x12, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4e, 0x65, 0x77,
	0x4d, 0x75, 0x74, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x43, 0x53, 0x4d, 0x75, 0x74, 0x65,
	0x78, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x75,
	0x74, 0x65, 0x78, 0x12, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x47, 0x43, 0x53, 0x4d, 0x75, 0x74, 0x65, 0x78, 0x1a, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x43, 0x53, 0x4d, 0x75, 0x74, 0x65, 0x78, 0x22, 0x00, 0x12,
	0x3d, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x75, 0x74, 0x65, 0x78, 0x12,
	0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x43, 0x53, 0x4d,
	0x75, 0x74, 0x65, 0x78, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x0b, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x4d, 0x75, 0x74, 0x65, 0x78, 0x12, 0x1d, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x4d, 0x75, 0x74, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x43, 0x53, 0x4d, 0x75, 0x74, 0x65,
	0x78, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_lock_service_proto_rawDescOnce sync.Once
	file_grpc_lock_service_proto_rawDescData = file_grpc_lock_service_proto_rawDesc
)

func file_grpc_lock_service_proto_rawDescGZIP() []byte {
	file_grpc_lock_service_proto_rawDescOnce.Do(func() {
		file_grpc_lock_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_lock_service_proto_rawDescData)
	})
	return file_grpc_lock_service_proto_rawDescData
}

var file_grpc_lock_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_grpc_lock_service_proto_goTypes = []interface{}{
	(*NewMutexRequest)(nil),     // 0: grpc_lock.NewMutexRequest
	(*ExtendMutexRequest)(nil),  // 1: grpc_lock.ExtendMutexRequest
	(*durationpb.Duration)(nil), // 2: google.protobuf.Duration
	(*GCSMutex)(nil),            // 3: grpc_lock.GCSMutex
	(*emptypb.Empty)(nil),       // 4: google.protobuf.Empty
}
var file_grpc_lock_service_proto_depIdxs = []int32{
	2, // 0: grpc_lock.NewMutexRequest.duration:type_name -> google.protobuf.Duration
	3, // 1: grpc_lock.ExtendMutexRequest.mutex:type_name -> grpc_lock.GCSMutex
	2, // 2: grpc_lock.ExtendMutexRequest.duration:type_name -> google.protobuf.Duration
	0, // 3: grpc_lock.GrpcLockService.NewMutex:input_type -> grpc_lock.NewMutexRequest
	3, // 4: grpc_lock.GrpcLockService.CertifyMutex:input_type -> grpc_lock.GCSMutex
	3, // 5: grpc_lock.GrpcLockService.ReleaseMutex:input_type -> grpc_lock.GCSMutex
	1, // 6: grpc_lock.GrpcLockService.ExtendMutex:input_type -> grpc_lock.ExtendMutexRequest
	3, // 7: grpc_lock.GrpcLockService.NewMutex:output_type -> grpc_lock.GCSMutex
	3, // 8: grpc_lock.GrpcLockService.CertifyMutex:output_type -> grpc_lock.GCSMutex
	4, // 9: grpc_lock.GrpcLockService.ReleaseMutex:output_type -> google.protobuf.Empty
	3, // 10: grpc_lock.GrpcLockService.ExtendMutex:output_type -> grpc_lock.GCSMutex
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_grpc_lock_service_proto_init() }
func file_grpc_lock_service_proto_init() {
	if File_grpc_lock_service_proto != nil {
		return
	}
	file_mutex_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_grpc_lock_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMutexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_lock_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtendMutexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_lock_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_lock_service_proto_goTypes,
		DependencyIndexes: file_grpc_lock_service_proto_depIdxs,
		MessageInfos:      file_grpc_lock_service_proto_msgTypes,
	}.Build()
	File_grpc_lock_service_proto = out.File
	file_grpc_lock_service_proto_rawDesc = nil
	file_grpc_lock_service_proto_goTypes = nil
	file_grpc_lock_service_proto_depIdxs = nil
}
